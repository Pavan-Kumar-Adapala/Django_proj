name: CI Pipeline

on:
  pull_request:
    branches: ["development"]
    paths:
      - '**.py'  # Filters to only Python file

jobs:
  lint-and-quality:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }} # Capture the cache hit result
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Flake8 (Code Quality)
        run: flake8 .

      - name: Run Pylint (Linting Test)
        run: pylint ./polls --rcfile=.pylintrc  # Use the custom config to ignore certain errors

  run-tests:
    runs-on: ubuntu-latest
    needs: lint-and-quality  # Ensure the cache from lint-and-quality job is available
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Use a cache key similar to lint-and-quality job
      - name: Restore Python dependencies cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Install the dependencies again if not found in cache

      - name: Run Django Tests
        run: python manage.py test
